version: '{branch}.{build}'
image:
- Visual Studio 2017

clone_folder: c:\gopath\src\github.com\adedayo\tcpscan

environment:
  MYAPP: tcpscan
  VERSION: ${APPVEYOR_REPO_TAG_NAME}
  GOARC: amd64
  matrix:
    - platform: x64
      configuration: Release
      # GETH_ARCH: amd64
      # MSYS2_ARCH: x86_64
      # MSYS2_BITS: "64"
      # MSYSTEM: MINGW64
      PATH: C:\msys64\mingw64\bin\;C:\Program Files (x86)\NSIS\;%PATH% #make gcc available
stack: go 1.11

platform: x64

install:
  - gcc --version
  # - set PATH=%WIX%\bin;%PATH% #this is for WiX
  - choco install winflexbison -y
  - win_flex --version
  - win_bison --version
  - appveyor DownloadFile https://github.com/the-tcpdump-group/libpcap/archive/libpcap-1.9.0.zip
  - dir
  - 7z x libpcap-1.9.0.zip 
  - move libpcap-libpcap-1.9.0 libpcap
  - cd libpcap
  # - choco install go-msi -y
  # - appveyor DownloadFile http://www.winpcap.org/install/bin/WpdPack_4_1_2.zip
  # - 7z x .\WpdPack_4_1_2.zip -oWin32
  # - cd ..
  # - cmake .

build_script:
  - type NUL >.devel
  - md build
  - cd build
  # - cmake -DCMAKE_PREFIX_PATH=..\Win32\WpdPack -G"Visual Studio 12 2013" ..
  # - msbuild -nologo  pcap.sln
  - cmake -DCMAKE_PREFIX_PATH=..\libpcap -G"Visual Studio 15 2017 Win64" ..
  - msbuild /m /nologo /p:Configuration=Release pcap.sln
  # copy file to where cgo is expecting them to be, see https://github.com/google/gopacket/blob/c5b434497bea7a3417dc45b84c70282c4a5b3b3d/pcap/pcap.go
  - echo f | xcopy Release\pcap.exp C:\WpdPack\Lib\x64\wpcap.exp 
  - echo f | xcopy Release\pcap.lib C:\WpdPack\Lib\x64\wpcap.lib 
  - echo f | xcopy Release\pcap_static.lib C:\WpdPack\Lib\x64\wpcap_static.lib 
  - echo d | xcopy ..\pcap C:\WpdPack\Include
  - echo d | xcopy ..\pcap C:\WpdPack\Include\pcap # some files are expecting the headers under pcap directory
  - cd ..
  - go get ./...
  - go build github.com\adedayo\tcpscan\cmd\tcpscan
  - dir
  
  # - set PATH=C:\Program Files\go-msi\;%PATH% #go-msi path
  # - go-msi make --msi tcpscan-%VERSION%-%GOARCH%.msi --version %VERSION% --arch %GOARCH%
  - 7z a %MYAPP%-%VERSION%-%GOARCH%.zip *.exe
  - dir

# artifacts:
#   - path: 'tcpscan*.zip'
#     name: zip-x64

deploy:
  - provider: GitHub
    artifact: /tcpscan.*\.zip/
    draft: false
    prerelease: false
    description: "Release ${VERSION}"
    auth_token:
      secure: WdtmPBg+FpFzcaV8TifOOP6BvkGo1OpvRAfWZv3aZJjVD5PdE/xLrMd8zhrnAxzc
    on:
      APPVEYOR_REPO_TAG: true
  
  

# before_build:
#   - go get ./...
#   - go build github.com\adedayo\tcpscan\cmd\tcpscan

# before_test:
#   - go vet ./...

# test_script:
#   - go test ./...